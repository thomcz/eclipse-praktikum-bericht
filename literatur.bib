% This file was created with JabRef 2.3.1.
% Encoding: Cp1252
@misc{langhammer,
title = {Automated coevolution of source code and software architecture models},
author = {Langhammer, Michael},
address = {Karlsruhe},
year = {[2017]},
size = {1 Online-Ressource (xv, 259 Seiten) : Illustrationen},
note = {},
bestand = {Karlsruher Institut f√ºr Technologie (KIT) - KIT-Bibliothek <90>;
lizenzfrei <LFER>;
},
URL = {http://dx.doi.org/10.5445/IR/1000069366},
}

@mastersthesis{klare2016,
  author = {Klare, Heiko},
  school = {Karlsruhe Institute of Technology (KIT)},
  title = {{Designing a Change-Driven Language for Model Consistency Repair Routines}},
  pdf = {http://sdqweb.ipd.kit.edu/publications/pdfs/klare2016b.pdf},
  year = {2016}
}

@Inbook{Atkinson2010,
author="Atkinson, Colin
and Stoll, Dietmar
and Bostan, Philipp",
editor="Maciaszek, Leszek A.
and Gonz{\'a}lez-P{\'e}rez, C{\'e}sar
and Jablonski, Stefan",
title="Orthographic Software Modeling: A Practical Approach to View-Based Development",
bookTitle="Evaluation of Novel Approaches to Software Engineering: 3rd and 4th International Conferences, ENASE 2008/2009, Funchal, Madeira, Portugal, May 4-7, 2008 / Milan, Italy, May 9-10, 2009. Revised Selected Papers",
year="2010",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="206--219",
abstract="Although they are significantly different in how they decompose and conceptualize software systems, one thing that all advanced software engineering paradigms have in common is that they increase the number of different views involved in visualizing a system. Managing these different views can be challenging even when a paradigm is used independently, but when they are used together the number of views and inter-dependencies quickly becomes overwhelming. In this paper we present a novel approach for organizing and generating the different views used in advanced software engineering methods that we call Orthographic Software Modeling (OSM). This provides a simple metaphor for integrating different development paradigms and for leveraging domain specific languages in software engineering. Development environments that support OSM essentially raise the level of abstraction at which developers interact with their tools by hiding the idiosyncrasies of specific editors, storage choices and artifact organization policies. The overall benefit is to significantly simplify the use of advanced software engineering methods.",
isbn="978-3-642-14819-4",
doi="10.1007/978-3-642-14819-4_15",
url="https://doi.org/10.1007/978-3-642-14819-4_15"
}

@phdthesis{kramer2017a,
  author = {Max Emanuel Kramer},
  title = {Specification Languages for Preserving Consistency between Models of Different Languages},
  school = {Karlsruhe Institute of Technology (KIT)},
  address = {Karlsruhe, Germany},
  year = {2017},
  pagetotal = {278},
  doi = {10.5445/IR/1000069284},
  url = {http://nbn-resolving.org/urn:nbn:de:swb:90-692845},
  pdf = {http://publikationen.bibliothek.kit.edu/1000069284/4139803}
}
@inproceedings{kramer2013b,
  acmid = {2489864},
  address = {New York, NY, USA},
  articleno = {5},
  author = {Kramer, Max E. and Burger, Erik and Langhammer, Michael},
  booktitle = {Proceedings of the 1st Workshop on View-Based, Aspect-Oriented and Orthographic Software Modelling},
  doi = {10.1145/2489861.2489864},
  isbn = {978-1-4503-2070-2},
  keywords = {component-based software architectures, model-driven engineering, synchronization, view-based modeling},
  location = {Montpellier, France},
  numpages = {6},
  pages = {5:1--5:6},
  pdf = {http://sdqweb.ipd.kit.edu/publications/pdfs/kramer2013b.pdf},
  publisher = {ACM},
  series = {VAO '13},
  tags = {workshop},
  title = {View-centric engineering with synchronized heterogeneous models},
  url = {http://doi.acm.org/10.1145/2489861.2489864},
  year = {2013},
  groups = {SDQ; KramerMax; BurgerErik; LanghammerMichael}
}


